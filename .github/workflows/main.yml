name: CI

on:
  push:
    paths:
      - ".github/workflows/main.yml"
      - "sphinx/**"
      - "tests/**"
  pull_request:
    paths:
      - ".github/workflows/main.yml"
      - "sphinx/**"
      - "tests/**"

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  PYTHONDEVMODE: "1"  # -X dev
  PYTHONWARNDEFAULTENCODING: "1"  # -X warn_default_encoding

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    name: Python ${{ matrix.python }} (Docutils ${{ matrix.docutils }})
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python:
        - "3.11"
        - "3.12"
        - "3.13"
        # - "3.13t"
        # - "3.14.0-beta.1"
        # - "3.14.0-beta.1t"
        docutils:
        - "0.20"
        - "0.21"
        - "0.22"

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - name: Mount the test roots as read-only
      run: |
        mkdir -p ./tests/roots-read-only
        sudo mount -v --bind --read-only ./tests/roots ./tests/roots-read-only
    - name: Install graphviz
      run: sudo apt-get install --no-install-recommends --yes graphviz
    - uses: astral-sh/setup-uv@v6
    - name: Test with pytest
      run: uv run --with "docutils~=${{ matrix.docutils }}.0" --python ${{ matrix.python }} pytest -n logical --dist=worksteal -vv --durations 25

  windows:
    runs-on: windows-latest
    name: Windows
    timeout-minutes: 15

    steps:
    # https://github.com/actions/runner-images/issues/8755
    # On standard runners, the D: drive is much faster.
    - name: Set %TMP% and %TEMP% to D:\\Temp
      run: |
        mkdir "D:\\Tmp"
        echo "TMP=D:\\Tmp" >> $env:GITHUB_ENV
        echo "TEMP=D:\\Tmp" >> $env:GITHUB_ENV

    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - name: Install graphviz
      run: choco install --no-progress graphviz
    - uses: astral-sh/setup-uv@v6
    - name: Test with pytest
      run: uv run pytest -vv --durations 25

  macos:
    runs-on: macos-latest
    name: macOS
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - name: Install graphviz
      run: brew install graphviz
    - uses: astral-sh/setup-uv@v6
    - name: Test with pytest
      run: uv run pytest -vv --durations 25

  docutils-latest:
    runs-on: ubuntu-latest
    name: Docutils HEAD
    timeout-minutes: 15

    steps:
    - name: Install epubcheck
      run: |
        EPUBCHECK_VERSION="5.1.0"
        mkdir /tmp/epubcheck && cd /tmp/epubcheck
        wget --no-verbose https://github.com/w3c/epubcheck/releases/download/v${EPUBCHECK_VERSION}/epubcheck-${EPUBCHECK_VERSION}.zip
        unzip epubcheck-${EPUBCHECK_VERSION}.zip
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - name: Install graphviz
      run: sudo apt-get install --no-install-recommends --yes graphviz
    - uses: astral-sh/setup-uv@v6
    - name: Test with pytest
      run: uv run --with "docutils @ git+https://github.com/docutils/docutils.git#subdirectory=docutils" pytest -n logical --dist=worksteal -vv
      env:
        DO_EPUBCHECK: "1"
        EPUBCHECK_PATH: "/tmp/epubcheck/epubcheck-5.1.0/epubcheck.jar"

  oldest-supported:
    runs-on: ubuntu-latest
    name: Oldest supported
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3"
    - name: Check Python version
      run: python --version --version
    - name: Install graphviz
      run: sudo apt-get install --no-install-recommends --yes graphviz
    - uses: astral-sh/setup-uv@v6
    - name: Install dependencies
      run: |
        uv pip install . --group test --resolution lowest-direct
        uv pip install alabaster==1.0.0
    - name: Test with pytest
      run: python -m pytest -n logical --dist=worksteal -vv --durations 25
      env:
        PYTHONWARNINGS: "error"  # treat all warnings as errors

  latex:
    runs-on: ubuntu-latest
    name: LaTeX
    timeout-minutes: 15
    container:
      image: ghcr.io/sphinx-doc/sphinx-ci

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - uses: astral-sh/setup-uv@v6
    - name: Test with pytest
      run: uv run --with "docutils @ git+https://github.com/docutils/docutils.git#subdirectory=docutils" pytest -vv --durations 25
      env:
        DO_EPUBCHECK: "1"

  coverage:
    if: github.event_name == 'push' && github.repository_owner == 'sphinx-doc'
    runs-on: ubuntu-latest
    name: Coverage
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
    - name: Install graphviz
      run: sudo apt-get install --no-install-recommends --yes graphviz
    - uses: astral-sh/setup-uv@v6
    - name: Test with pytest
      run: uv run --with pytest-cov pytest -vv --cov . --cov-append --cov-config pyproject.toml
      env:
        VIRTUALENV_SYSTEM_SITE_PACKAGES: "1"
    - name: codecov
      uses: codecov/codecov-action@v5
