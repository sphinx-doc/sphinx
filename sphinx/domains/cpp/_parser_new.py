from __future__ import annotations

# Re-export all parser components for backward compatibility
# This module has been modularized - see the individual modules for details

from sphinx.domains.cpp.parser_base import *  # noqa: F403
from sphinx.domains.cpp.parser_expressions import *  # noqa: F403
from sphinx.domains.cpp.parser_declarations import *  # noqa: F403
from sphinx.domains.cpp.parser_templates import *  # noqa: F403
from sphinx.domains.cpp.parser_main import *  # noqa: F403

# Re-export AST classes for backward compatibility
from sphinx.domains.cpp._ast import (  # noqa: F403
    ASTAlignofExpr,
    ASTArray,
    ASTAssignmentExpr,
    ASTBaseClass,
    ASTBinOpExpr,
    ASTBooleanLiteral,
    ASTBracedInitList,
    ASTCastExpr,
    ASTCharLiteral,
    ASTClass,
    ASTCommaExpr,
    ASTConcept,
    ASTConditionalExpr,
    ASTDeclaration,
    ASTDeclaratorMemPtr,
    ASTDeclaratorNameBitField,
    ASTDeclaratorNameParamQual,
    ASTDeclaratorParamPack,
    ASTDeclaratorParen,
    ASTDeclaratorPtr,
    ASTDeclaratorRef,
    ASTDeclSpecs,
    ASTDeclSpecsSimple,
    ASTDeleteExpr,
    ASTEnum,
    ASTEnumerator,
    ASTExplicitCast,
    ASTExplicitSpec,
    ASTFallbackExpr,
    ASTFoldExpr,
    ASTFunctionParameter,
    ASTIdentifier,
    ASTIdExpression,
    ASTInitializer,
    ASTNamespace,
    ASTNestedName,
    ASTNestedNameElement,
    ASTNewExpr,
    ASTNoexceptExpr,
    ASTNoexceptSpec,
    ASTNumberLiteral,
    ASTOperatorBuildIn,
    ASTOperatorLiteral,
    ASTOperatorType,
    ASTPackExpansionExpr,
    ASTParametersQualifiers,
    ASTParenExpr,
    ASTParenExprList,
    ASTPointerLiteral,
    ASTPostfixArray,
    ASTPostfixCallExpr,
    ASTPostfixDec,
    ASTPostfixExpr,
    ASTPostfixInc,
    ASTPostfixMember,
    ASTPostfixMemberOfPointer,
    ASTRequiresClause,
    ASTSizeofExpr,
    ASTSizeofParamPack,
    ASTSizeofType,
    ASTStringLiteral,
    ASTTemplateArgConstant,
    ASTTemplateArgs,
    ASTTemplateDeclarationPrefix,
    ASTTemplateIntroduction,
    ASTTemplateIntroductionParameter,
    ASTTemplateKeyParamPackIdDefault,
    ASTTemplateParamConstrainedTypeWithInit,
    ASTTemplateParamNonType,
    ASTTemplateParams,
    ASTTemplateParamTemplateType,
    ASTTemplateParamType,
    ASTThisLiteral,
    ASTTrailingTypeSpecDecltype,
    ASTTrailingTypeSpecDecltypeAuto,
    ASTTrailingTypeSpecFundamental,
    ASTTrailingTypeSpecName,
    ASTType,
    ASTTypeId,
    ASTTypeUsing,
    ASTTypeWithInit,
    ASTUnaryOpExpr,
    ASTUnion,
    ASTUserDefinedLiteral,
)
from sphinx.domains.cpp._ids import (
    _expression_assignment_ops,
    _expression_bin_ops,
    _expression_unary_ops,
    _fold_operator_re,
    _id_explicit_cast,
    _keywords,
    _operator_re,
    _simple_type_specifiers_re,
    _string_re,
    _visibility_re,
    udl_identifier_re,
)
from sphinx.util import logging
from sphinx.util.cfamily import (
    ASTAttributeList,
    DefinitionError,
    UnsupportedMultiCharacterCharLiteral,
    binary_literal_re,
    char_literal_re,
    float_literal_re,
    float_literal_suffix_re,
    hex_literal_re,
    identifier_re,
    integer_literal_re,
    integers_literal_suffix_re,
    octal_literal_re,
)

if TYPE_CHECKING:
    from collections.abc import Callable, Sequence
    from typing import Any

# Define __all__ to explicitly export all classes and functions
__all__ = [
    # Parser components
    'BaseParser',
    'ExpressionParser',
    'DeclarationParser',
    'TemplateParser',
    'DefinitionParser',

    # AST classes (re-exported)
    'ASTAlignofExpr',
    'ASTArray',
    'ASTAssignmentExpr',
    'ASTBaseClass',
    'ASTBinOpExpr',
    'ASTBooleanLiteral',
    'ASTBracedInitList',
    'ASTCastExpr',
    'ASTCharLiteral',
    'ASTClass',
    'ASTCommaExpr',
    'ASTConcept',
    'ASTConditionalExpr',
    'ASTDeclaration',
    'ASTDeclaratorMemPtr',
    'ASTDeclaratorNameBitField',
    'ASTDeclaratorNameParamQual',
    'ASTDeclaratorParamPack',
    'ASTDeclaratorParen',
    'ASTDeclaratorPtr',
    'ASTDeclaratorRef',
    'ASTDeclSpecs',
    'ASTDeclSpecsSimple',
    'ASTDeleteExpr',
    'ASTEnum',
    'ASTEnumerator',
    'ASTExplicitCast',
    'ASTExplicitSpec',
    'ASTFallbackExpr',
    'ASTFoldExpr',
    'ASTFunctionParameter',
    'ASTIdentifier',
    'ASTIdExpression',
    'ASTInitializer',
    'ASTNamespace',
    'ASTNestedName',
    'ASTNestedNameElement',
    'ASTNewExpr',
    'ASTNoexceptExpr',
    'ASTNoexceptSpec',
    'ASTNumberLiteral',
    'ASTOperatorBuildIn',
    'ASTOperatorLiteral',
    'ASTOperatorType',
    'ASTPackExpansionExpr',
    'ASTParametersQualifiers',
    'ASTParenExpr',
    'ASTParenExprList',
    'ASTPointerLiteral',
    'ASTPostfixArray',
    'ASTPostfixCallExpr',
    'ASTPostfixDec',
    'ASTPostfixExpr',
    'ASTPostfixInc',
    'ASTPostfixMember',
    'ASTPostfixMemberOfPointer',
    'ASTRequiresClause',
    'ASTSizeofExpr',
    'ASTSizeofParamPack',
    'ASTSizeofType',
    'ASTStringLiteral',
    'ASTTemplateArgConstant',
    'ASTTemplateArgs',
    'ASTTemplateDeclarationPrefix',
    'ASTTemplateIntroduction',
    'ASTTemplateIntroductionParameter',
    'ASTTemplateKeyParamPackIdDefault',
    'ASTTemplateParamConstrainedTypeWithInit',
    'ASTTemplateParamNonType',
    'ASTTemplateParams',
    'ASTTemplateParamTemplateType',
    'ASTTemplateParamType',
    'ASTThisLiteral',
    'ASTTrailingTypeSpecDecltype',
    'ASTTrailingTypeSpecDecltypeAuto',
    'ASTTrailingTypeSpecFundamental',
    'ASTTrailingTypeSpecName',
    'ASTType',
    'ASTTypeId',
    'ASTTypeUsing',
    'ASTTypeWithInit',
    'ASTUnaryOpExpr',
    'ASTUnion',
    'ASTUserDefinedLiteral',

    # Utility constants
    'logger',
    'DefinitionError',
    'UnsupportedMultiCharacterCharLiteral',
    'binary_literal_re',
    'char_literal_re',
    'float_literal_re',
    'float_literal_suffix_re',
    'hex_literal_re',
    'identifier_re',
    'integer_literal_re',
    'integers_literal_suffix_re',
    'octal_literal_re',
]
